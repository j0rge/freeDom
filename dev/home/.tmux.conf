# Whichever shell are now running
set-option -g default-shell $SHELL
set -g default-terminal "screen-256color"

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# C-b is not acceptable -- Vim uses it (page back)
unbind C-b
set-option -g prefix C-a
bind-key C-a last-window
# Vim-like behavior:
setw -g mode-keys vi

#set -g mode-mouse on
#setw -g mouse-select-window on
#setw -g mouse-select-pane on
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
unbind [
bind ` copy-mode
unbind v
unbind p
bind v paste-buffer
bind-key -r p previous-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-bg colour229
#setw -g window-status-alert-bg colour229
#set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=colour17]#h"
set -g message-fg colour53
set -g message-bg colour225
set -g message-attr bold

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
#setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
#set-window-option -g window-status-current-bg red
# after copying to a tmux buffer, hit y again to copy to clipboard
#bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
set-option default-path "$PWD"
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
